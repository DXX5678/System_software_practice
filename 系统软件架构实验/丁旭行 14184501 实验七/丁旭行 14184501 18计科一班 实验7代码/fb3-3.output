State 45 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce


Grammar

    0 $accept: calclist $end

    1 stmt: IF exp THEN list
    2     | IF exp THEN '{' list '}'
    3     | IF exp THEN list ELSE list
    4     | IF exp THEN '{' list '}' ELSE list
    5     | IF exp THEN list ELSE '{' list '}'
    6     | IF exp THEN '{' list '}' ELSE '{' list '}'
    7     | WHILE exp DO list
    8     | WHILE exp DO '{' list '}'
    9     | exp

   10 list: /* empty */
   11     | stmt ';' list
   12     | stmt

   13 exp: exp CMP exp
   14    | exp '+' exp
   15    | exp '-' exp
   16    | exp '*' exp
   17    | exp '/' exp
   18    | '|' exp
   19    | '(' exp ')'
   20    | '-' exp
   21    | NUMBER
   22    | FUNC '(' explist ')' ';'
   23    | FUNC '(' explist ')'
   24    | NAME
   25    | NAME '=' exp
   26    | NAME '(' explist ')' ';'
   27    | NAME '(' explist ')'

   28 explist: exp
   29        | exp ',' explist

   30 symlist: NAME
   31        | NAME ',' symlist

   32 calclist: /* empty */
   33         | calclist stmt EOL
   34         | calclist LET NAME '(' symlist ')' '{' list '}' EOL
   35         | calclist error EOL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 22 23 26 27 34
')' (41) 19 22 23 26 27 34
'*' (42) 16
'+' (43) 14
',' (44) 29 31
'-' (45) 15 20
'/' (47) 17
';' (59) 11 22 26
'=' (61) 25
'{' (123) 2 4 5 6 8 34
'|' (124) 18
'}' (125) 2 4 5 6 8 34
error (256) 35
NUMBER (258) 21
NAME (259) 24 25 26 27 30 31 34
FUNC (260) 22 23
EOL (261) 33 34 35
IF (262) 1 2 3 4 5 6
THEN (263) 1 2 3 4 5 6
WHILE (264) 7 8
DO (265) 7 8
LET (266) 34
ELSE (267) 3 4 5 6
CMP (268) 13
UMINUS (269)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
stmt (28)
    on left: 1 2 3 4 5 6 7 8 9, on right: 11 12 33
list (29)
    on left: 10 11 12, on right: 1 2 3 4 5 6 7 8 11 34
exp (30)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    1 2 3 4 5 6 7 8 9 13 14 15 16 17 18 19 20 25 28 29
explist (31)
    on left: 28 29, on right: 22 23 26 27 29
symlist (32)
    on left: 30 31, on right: 31 34
calclist (33)
    on left: 32 33 34 35, on right: 0 33 34 35


state 0

    0 $accept: . calclist $end

    $default  reduce using rule 32 (calclist)

    calclist  go to state 1


state 1

    0 $accept: calclist . $end
   33 calclist: calclist . stmt EOL
   34         | calclist . LET NAME '(' symlist ')' '{' list '}' EOL
   35         | calclist . error EOL

    $end    shift, and go to state 2
    error   shift, and go to state 3
    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    stmt  go to state 13
    exp   go to state 14


state 2

    0 $accept: calclist $end .

    $default  accept


state 3

   35 calclist: calclist error . EOL

    EOL  shift, and go to state 15


state 4

   21 exp: NUMBER .

    $default  reduce using rule 21 (exp)


state 5

   24 exp: NAME .
   25    | NAME . '=' exp
   26    | NAME . '(' explist ')' ';'
   27    | NAME . '(' explist ')'

    '='  shift, and go to state 16
    '('  shift, and go to state 17

    $default  reduce using rule 24 (exp)


state 6

   22 exp: FUNC . '(' explist ')' ';'
   23    | FUNC . '(' explist ')'

    '('  shift, and go to state 18


state 7

    1 stmt: IF . exp THEN list
    2     | IF . exp THEN '{' list '}'
    3     | IF . exp THEN list ELSE list
    4     | IF . exp THEN '{' list '}' ELSE list
    5     | IF . exp THEN list ELSE '{' list '}'
    6     | IF . exp THEN '{' list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 19


state 8

    7 stmt: WHILE . exp DO list
    8     | WHILE . exp DO '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 20


state 9

   34 calclist: calclist LET . NAME '(' symlist ')' '{' list '}' EOL

    NAME  shift, and go to state 21


state 10

   20 exp: '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 22


state 11

   18 exp: '|' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 23


state 12

   19 exp: '(' . exp ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 24


state 13

   33 calclist: calclist stmt . EOL

    EOL  shift, and go to state 25


state 14

    9 stmt: exp .
   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp

    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 9 (stmt)


state 15

   35 calclist: calclist error EOL .

    $default  reduce using rule 35 (calclist)


state 16

   25 exp: NAME '=' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 31


state 17

   26 exp: NAME '(' . explist ')' ';'
   27    | NAME '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 32
    explist  go to state 33


state 18

   22 exp: FUNC '(' . explist ')' ';'
   23    | FUNC '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 32
    explist  go to state 34


state 19

    1 stmt: IF exp . THEN list
    2     | IF exp . THEN '{' list '}'
    3     | IF exp . THEN list ELSE list
    4     | IF exp . THEN '{' list '}' ELSE list
    5     | IF exp . THEN list ELSE '{' list '}'
    6     | IF exp . THEN '{' list '}' ELSE '{' list '}'
   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp

    THEN  shift, and go to state 35
    CMP   shift, and go to state 26
    '+'   shift, and go to state 27
    '-'   shift, and go to state 28
    '*'   shift, and go to state 29
    '/'   shift, and go to state 30


state 20

    7 stmt: WHILE exp . DO list
    8     | WHILE exp . DO '{' list '}'
   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp

    DO   shift, and go to state 36
    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30


state 21

   34 calclist: calclist LET NAME . '(' symlist ')' '{' list '}' EOL

    '('  shift, and go to state 37


state 22

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   20    | '-' exp .

    $default  reduce using rule 20 (exp)


state 23

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | '|' exp .

    $default  reduce using rule 18 (exp)


state 24

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   19    | '(' exp . ')'

    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ')'  shift, and go to state 38


state 25

   33 calclist: calclist stmt EOL .

    $default  reduce using rule 33 (calclist)


state 26

   13 exp: exp CMP . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 39


state 27

   14 exp: exp '+' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 40


state 28

   15 exp: exp '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 41


state 29

   16 exp: exp '*' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 42


state 30

   17 exp: exp '/' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 43


state 31

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   25    | NAME '=' exp .

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 25 (exp)


state 32

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   28 explist: exp .
   29        | exp . ',' explist

    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ','  shift, and go to state 44

    $default  reduce using rule 28 (explist)


state 33

   26 exp: NAME '(' explist . ')' ';'
   27    | NAME '(' explist . ')'

    ')'  shift, and go to state 45


state 34

   22 exp: FUNC '(' explist . ')' ';'
   23    | FUNC '(' explist . ')'

    ')'  shift, and go to state 46


state 35

    1 stmt: IF exp THEN . list
    2     | IF exp THEN . '{' list '}'
    3     | IF exp THEN . list ELSE list
    4     | IF exp THEN . '{' list '}' ELSE list
    5     | IF exp THEN . list ELSE '{' list '}'
    6     | IF exp THEN . '{' list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '{'     shift, and go to state 47
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 49
    exp   go to state 14


state 36

    7 stmt: WHILE exp DO . list
    8     | WHILE exp DO . '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '{'     shift, and go to state 50
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 51
    exp   go to state 14


state 37

   34 calclist: calclist LET NAME '(' . symlist ')' '{' list '}' EOL

    NAME  shift, and go to state 52

    symlist  go to state 53


state 38

   19 exp: '(' exp ')' .

    $default  reduce using rule 19 (exp)


state 39

   13 exp: exp . CMP exp
   13    | exp CMP exp .
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    CMP  error (nonassociative)

    $default  reduce using rule 13 (exp)


state 40

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   14    | exp '+' exp .
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 14 (exp)


state 41

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   15    | exp '-' exp .
   16    | exp . '*' exp
   17    | exp . '/' exp

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 15 (exp)


state 42

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   16    | exp '*' exp .
   17    | exp . '/' exp

    $default  reduce using rule 16 (exp)


state 43

   13 exp: exp . CMP exp
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   17    | exp '/' exp .

    $default  reduce using rule 17 (exp)


state 44

   29 explist: exp ',' . explist

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 32
    explist  go to state 54


state 45

   26 exp: NAME '(' explist ')' . ';'
   27    | NAME '(' explist ')' .

    ';'  shift, and go to state 55

    ';'       [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


state 46

   22 exp: FUNC '(' explist ')' . ';'
   23    | FUNC '(' explist ')' .

    ';'  shift, and go to state 56

    ';'       [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


state 47

    2 stmt: IF exp THEN '{' . list '}'
    4     | IF exp THEN '{' . list '}' ELSE list
    6     | IF exp THEN '{' . list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 57
    exp   go to state 14


state 48

   11 list: stmt . ';' list
   12     | stmt .

    ';'  shift, and go to state 58

    ';'       [reduce using rule 12 (list)]
    $default  reduce using rule 12 (list)


state 49

    1 stmt: IF exp THEN list .
    3     | IF exp THEN list . ELSE list
    5     | IF exp THEN list . ELSE '{' list '}'

    ELSE  shift, and go to state 59

    ELSE      [reduce using rule 1 (stmt)]
    $default  reduce using rule 1 (stmt)


state 50

    8 stmt: WHILE exp DO '{' . list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 60
    exp   go to state 14


state 51

    7 stmt: WHILE exp DO list .

    $default  reduce using rule 7 (stmt)


state 52

   30 symlist: NAME .
   31        | NAME . ',' symlist

    ','  shift, and go to state 61

    $default  reduce using rule 30 (symlist)


state 53

   34 calclist: calclist LET NAME '(' symlist . ')' '{' list '}' EOL

    ')'  shift, and go to state 62


state 54

   29 explist: exp ',' explist .

    $default  reduce using rule 29 (explist)


state 55

   26 exp: NAME '(' explist ')' ';' .

    $default  reduce using rule 26 (exp)


state 56

   22 exp: FUNC '(' explist ')' ';' .

    $default  reduce using rule 22 (exp)


state 57

    2 stmt: IF exp THEN '{' list . '}'
    4     | IF exp THEN '{' list . '}' ELSE list
    6     | IF exp THEN '{' list . '}' ELSE '{' list '}'

    '}'  shift, and go to state 63


state 58

   11 list: stmt ';' . list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 64
    exp   go to state 14


state 59

    3 stmt: IF exp THEN list ELSE . list
    5     | IF exp THEN list ELSE . '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '{'     shift, and go to state 65
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 66
    exp   go to state 14


state 60

    8 stmt: WHILE exp DO '{' list . '}'

    '}'  shift, and go to state 67


state 61

   31 symlist: NAME ',' . symlist

    NAME  shift, and go to state 52

    symlist  go to state 68


state 62

   34 calclist: calclist LET NAME '(' symlist ')' . '{' list '}' EOL

    '{'  shift, and go to state 69


state 63

    2 stmt: IF exp THEN '{' list '}' .
    4     | IF exp THEN '{' list '}' . ELSE list
    6     | IF exp THEN '{' list '}' . ELSE '{' list '}'

    ELSE  shift, and go to state 70

    ELSE      [reduce using rule 2 (stmt)]
    $default  reduce using rule 2 (stmt)


state 64

   11 list: stmt ';' list .

    $default  reduce using rule 11 (list)


state 65

    5 stmt: IF exp THEN list ELSE '{' . list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 71
    exp   go to state 14


state 66

    3 stmt: IF exp THEN list ELSE list .

    $default  reduce using rule 3 (stmt)


state 67

    8 stmt: WHILE exp DO '{' list '}' .

    $default  reduce using rule 8 (stmt)


state 68

   31 symlist: NAME ',' symlist .

    $default  reduce using rule 31 (symlist)


state 69

   34 calclist: calclist LET NAME '(' symlist ')' '{' . list '}' EOL

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 72
    exp   go to state 14


state 70

    4 stmt: IF exp THEN '{' list '}' ELSE . list
    6     | IF exp THEN '{' list '}' ELSE . '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '{'     shift, and go to state 73
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 74
    exp   go to state 14


state 71

    5 stmt: IF exp THEN list ELSE '{' list . '}'

    '}'  shift, and go to state 75


state 72

   34 calclist: calclist LET NAME '(' symlist ')' '{' list . '}' EOL

    '}'  shift, and go to state 76


state 73

    6 stmt: IF exp THEN '{' list '}' ELSE '{' . list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 10 (list)

    stmt  go to state 48
    list  go to state 77
    exp   go to state 14


state 74

    4 stmt: IF exp THEN '{' list '}' ELSE list .

    $default  reduce using rule 4 (stmt)


state 75

    5 stmt: IF exp THEN list ELSE '{' list '}' .

    $default  reduce using rule 5 (stmt)


state 76

   34 calclist: calclist LET NAME '(' symlist ')' '{' list '}' . EOL

    EOL  shift, and go to state 78


state 77

    6 stmt: IF exp THEN '{' list '}' ELSE '{' list . '}'

    '}'  shift, and go to state 79


state 78

   34 calclist: calclist LET NAME '(' symlist ')' '{' list '}' EOL .

    $default  reduce using rule 34 (calclist)


state 79

    6 stmt: IF exp THEN '{' list '}' ELSE '{' list '}' .

    $default  reduce using rule 6 (stmt)
